#!/usr/bin/python3
# AGPL 2022 by David Hamner
import os
import glob
from flask import Flask, render_template, request
app = Flask("Dice")
port = 80

def getIP():
    import socket
    #Thanks: https://stackoverflow.com/a/1267524/5282272
    return (([ip for ip in socket.gethostbyname_ex(socket.gethostname())[2] if not ip.startswith("127.")] or [[(s.connect(("8.8.8.8", 53)), s.getsockname()[0], s.close()) for s in [socket.socket(socket.AF_INET, socket.SOCK_DGRAM)]][0][1]]) + ["no IP found"])[0]
SEVER_IP = getIP()


def css():
    return """
    <style>
        body 
        {
            background-color: #6CA5DE;
        }
        
        .buttons
        {
            background-color: #E1B637;
            border-radius: 35px;
            font-size: 20px;
        }
        
        .buttons a
        {
            background:lightblue;
            border-radius: 30px;
            font-size: 30px;
        }
        
        .printer_bar
        {
            background-image: linear-gradient(#6CA5DE, purple, #6CA5DE);
            width: 100%; 
            padding: 5px;
            border-radius: 30px;
        }
        .menu 
        {
            width: 100%; 
            margin-left: 2px;
            padding-left:30px;
            border: 2px solid purple;
            background-color: black;
            border-radius: 35px;
            overflow:hidden;
            color: white;
        }

        .menu a 
        {
            background-color: black; 
            color: white;
            display: block; 
            padding: 5px; 
            padding-left: 20px;
            font-size: 30px;
            text-decoration: none;
            float: left;
        }
    </style>"""


def menu_html():
    return f"""
    
        <div class="menu">
            <a href="http://{SEVER_IP}:{port}">Dice</a>
            <a href="https://git.sr.ht/~hamner/Dice">About</a>
        </div>"""

@app.route('/upload/<printer>')
def upload_file_page(printer):
    page_HTML = f"""
            <form class='menu' action = "http://{SEVER_IP}:{port}/uploader/{printer}" method = "POST" enctype = "multipart/form-data">
                <input type = "file" name = "file" />
                <input type = "submit" value="Upload gcode"/>
            </form>"""
    
    page_HTML = f"<body>{css()}\n{menu_html()}\n{page_HTML}\n</body>"
    return (page_HTML)

@app.route('/uploader/<printer>', methods = ['GET', 'POST'])
def upload_file(printer):
    if request.method == 'POST':
        f = request.files['file']
        if f.filename == "":
            return("Select gcode first")
        elif not f.filename.lower().endswith(".gcode"):
            return("File must end with .gcode")
        path = f"/dev/shm/printers/{printer}/upload/{f.filename}"
        print(f"Saving to {path}")
        f.save(path)
        reloader = f"""
            <meta http-equiv="refresh" content="time; URL=http://{SEVER_IP}:{port}" />
            """
        
        page_HTML = "<p>file uploaded successfully</p>"
        page_HTML = f"{reloader}<body>{css()}\n{menu_html()}\n{page_HTML}\n</div>\n</body>"
        return(page_HTML)


@app.route('/reprint/<printer>/<gcode_name>')
def reprint_print_on(printer, gcode_name):
    page_HTML = ""
    path = f"/dev/shm/printers/{printer}/done/{gcode_name}"
    reprint_path = f"/dev/shm/printers/{printer}/upload/{gcode_name}"
    if os.path.isfile(path):
        os.rename(path, reprint_path)
        page_HTML = "<p>Started print</p>"
    else:
        page_HTML = f"<p>Uhm, can't fine {path}</p>"
    
    page_HTML = f"<body>{css()}\n{menu_html()}\n{page_HTML}\n</div>\n</body>"
    return(page_HTML)



@app.route('/stop/<printer>')
def stop_print_on(printer):
    path = glob.glob(f"/dev/shm/printers/{printer}/printing/*")[0]
    if os.path.isfile(path):
        os.remove(path)
        page_HTML = "<p>Done</p><p>Note: GPX printers can only be stopped via the printer interface</p>"
    else:
        page_HTML = "<p>Uhm, that seem to not be printing things...</p>"
    
    page_HTML = f"<body>{css()}\n{menu_html()}\n{page_HTML}\n</div>\n</body>"


@app.route('/')
def index():
    HTML = ""
    for printer in glob.glob("/dev/shm/printers/*"):
        printer_active = False
        done_dir = f"{printer}/done"
        last_print = ""
        active_print = glob.glob(f"{printer}/printing/*")
        if active_print != []:
            printer_active = True
        if not printer_active:
            file_paths = glob.glob(f"{printer}/done/*")
            print(f"DEBUG: {file_paths}")
            if file_paths != []:
                newest = max(file_paths , key = os.path.getctime)
                print(newest)
                sort_name = newest.split("/")[-1]
                last_print = newest
        print(printer_active)
        printer = printer.split("/")[-1]
        clean_name = printer.replace("_"," ")
        
        # Printer ready
        if not printer_active and last_print == "":
            HTML = HTML + f"""
            <div class='printer_bar'>
                <button class='buttons' onclick="window.location.href='/upload/{printer}';">
                    Upload gcode to: {clean_name}
                </button>
            </div>
            """
        # Printer done printing
        elif last_print != "":
            HTML = HTML + f"""
            <div class='printer_bar'>
                <button class='buttons' onclick="window.location.href='/reprint/{printer}/{sort_name}';">
                    Reprint on: {clean_name} ({sort_name})
                </button>
                <button class='buttons' onclick="window.location.href='/upload/{printer}';">
                    Upload gcode to: {clean_name}
                </button>
            </div>
            """
        # Printer printing
        elif printer_active:
            HTML = HTML + f"""
            <div class='printer_bar'>
                <button class='buttons' onclick="window.location.href='/stop/{printer}';">
                    STOP: {clean_name} (Printing: {active_print[0]})
                </button>
            </div>
            """
    full_HTML = f"<meta http-equiv=refresh content=15>\n"
    full_HTML = full_HTML + f"<body>{css()}\n{menu_html()}\n{HTML}\n</body>"
    return(full_HTML)



app.run(host=SEVER_IP,port=port,debug=False)

